name: CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install tools and deps (no package build)
        run: |
          python -m pip install --upgrade pip
          # якщо є requirements.txt/constraints.txt — встановимо
          if [ -f requirements.txt ]; then
            if [ -f constraints.txt ]; then
              pip install -r requirements.txt -c constraints.txt
            else
              pip install -r requirements.txt
            fi
          fi
          pip install pytest pytest-cov hypothesis ruff mypy pre-commit

      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure

      - name: Lint with ruff
        run: ruff check .

      - name: Type check with mypy
        run: |
          if [ -d "btcmi" ]; then
            mypy btcmi
          fi

      - name: Run tests with pytest and Hypothesis
        env:
          PYTHONPATH: .
        run: pytest -q --disable-warnings --maxfail=1

  docker-build:
    runs-on: ubuntu-latest
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false

  release-artifacts:
    runs-on: ubuntu-latest
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Generate SBOM
        run: python scripts/generate_sbom.py
      - name: Generate checksums
        run: |
          find . -type f -not -path "./.git/*" -exec sha256sum {} \; | sort -k 2 > CHECKSUMS.SHA256
      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            provenance/sbom.spdx.json
            CHECKSUMS.SHA256
